import{a as p}from"./chunk-RJZ3H7D5.js";import{r as l}from"./chunk-FYJ5Y7AH.js";import{$a as u,N as n,S as r,Y as a}from"./chunk-PSXZOWGB.js";var f=(()=>{class e{constructor(){this._http=a(l),this.baseUrl=p,this.buildingData=u(null),this.buildingData$=this.buildingData.asReadonly()}getTypes(){return this.buildingData()?.types||[]}getCountries(){return this.buildingData()?.countries||[]}getCountriesByType(t){return this.getCountries().filter(i=>i.build_type_id===t)}getInsurances(){return this.buildingData()?.category.buildinginsurances||[]}getActiveInsurances(){return this.getInsurances().filter(t=>t.active_status==="1")}getChoicesByInsurance(t){return this.getInsurances().find(s=>s.id===t)?.buildingchoices.filter(s=>s.active_status==="1")||[]}fetchBuildingData(){let t={type:"building"};return this._http.get(`${this.baseUrl}app-policies/policies-content/3`,{params:t}).pipe(n(i=>{this.buildingData.set(i)}))}submitBuildingPolicy(t){return this._http.post(`${this.baseUrl}app-policies/policies-building-store`,t)}createBuildingLead(t){return t.has("category_id")||t.append("category_id","3"),this._http.post(`${this.baseUrl}app-leads/building-lead`,t)}updateBuildingLead(t,i){return this._http.post(`${this.baseUrl}app-leads/building-update/${t}`,i)}createBuildingClaim(t){return this._http.post(`${this.baseUrl}app-claims/claim-building-store`,t)}static{this.\u0275fac=function(i){return new(i||e)}}static{this.\u0275prov=r({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{f as a};
